variables:
  baseos: 'xdp-base'
  build_id: '{{env `BUILD_ID`}}'
  build_number: '{{env `BUILD_NUMBER`}}'
  destination_regions: '{{env `REGIONS`}}'
  disk_size: '16'
  home: '{{env `HOME`}}'
  docker_version: '19.03.8'
  installer_url: '{{env `INSTALLER_URL`}}'
  installer: '{{env `INSTALLER`}}'
  installer_version: ''
  installer_build_number: ''
  installer_build_type: prod
  installer_xce_branch: 'trunk'
  installer_xce_sha1: '3315f82d'
  installer_xd_branch: 'trunk'
  installer_xd_sha1: 'b63a3386'
  installer_byjob: 'BuildTrunk'
  installer_rc: ''
  installer_tag: '{{env `INSTALLER_TAG`}}'
  image_build_number: '{{env `BUILD_NUMBER`}}'
  xlrdir: '{{env `XLRDIR`}}'
  infra_dir: '{{env `XLRINFRADIR`}}'
  bootstrap: '{{env `XLRINFRADIR`}}/aws/cfn/{{env `PROJECT`}}/scripts/user-data.sh'
  license: '{{env `LICENSE`}}'
  product_desc: Xcalar Data Platform
  project: '{{env `PROJECT`}}'
  region: '{{env `AWS_DEFAULT_REGION`}}'
  shared_with: '{{env `SHARED_WITH` }}'
  ssh_username: ec2-user
  ssh_pubkey: ''
  today: '{{isotime "20060102"}}'
  uid: '1000'
  release: '{{env `RELEASE`}}'
  topsrc: '{{env `XLRINFRADIR`}}'
  shm_size: '16g'
  registry: '{{env `REGISTRY`}}'
  repository: 'xcalar/xcalar'
  dns1: '10.10.2.136'
  netstore_ip: '10.10.2.136'
  admin_user: 'admin'
  admin_password: 'admin'
  admin_email: 'info@xcalar.com'
  base_image: '{{env `REGISTRY`}}/centos:7.8.2003'
  image: '{{env `REGISTRY`}}/xcalar/base:{{user `installer_version`}}'
builders:
  - name: docker-base-el7
    type: docker
    image: '{{user `base_image`}}'
    commit: true
    exec_user: root
    run_command: #@ run_command
      - --security-opt
      - seccomp=unconfined
      - --cap-add
      - sys_ptrace
      - --ulimit=core=0:0
      - --ulimit=nofile=64960
      - --ulimit=nproc=140960:140960
      - --ulimit=memlock=-1:-1
      - --ulimit=stack=-1:-1
      - --shm-size={{user `shm_size`}}
      - --memory-swappiness=10
      - --tmpfs=/run
      - --tmpfs=/run/lock
      - -d
      - -it
      - --dns
      - '{{user `dns1`}}'
      - --add-host
      - 'netstore:{{user `netstore_ip`}}'
      - -e
      - container=docker
      - --
      - '{{.Image}}'
      - '/usr/sbin/init'
    volumes:
      "/netstore": "/netstore"
      "/sys/fs/cgroup": "/sys/fs/cgroup:ro"
    changes:
    - 'USER root'
    - 'WORKDIR /'
    - 'LABEL build_name={{ build_name }}'
    - 'LABEL build_type={{ build_type }}'
    - 'LABEL build_date={{user `today`}}'
    - 'LABEL build_number={{user `build_number`}}'
    - 'LABEL installer_version={{user `installer_version`}}'
    - 'LABEL installer_build_number={{user `installer_build_number`}}'
    - 'LABEL installer_build_type={{user `installer_build_type`}}'
    - 'LABEL installer_xce_branch={{user `installer_xce_branch`}}'
    - 'LABEL installer_xce_sha1={{user `installer_xce_sha1`}}'
    - 'LABEL installer_xd_branch={{user `installer_xd_branch`}}'
    - 'LABEL installer_xd_sha1={{user `installer_xd_sha1`}}'
    - 'LABEL installer_byjob={{user `installer_byjob`}}'
    - 'LABEL installer_rc={{user `installer_rc`}}'
    - 'LABEL installer_tag={{user `installer_tag`}}'
    - 'ENV container=docker'
    - 'ENTRYPOINT []'
    - 'CMD ["/usr/sbin/init"]'
  - name: docker-xcalar-el7
    type: docker
    image: '{{user `image`}}'
    commit: true
    exec_user: root
    run_command:
      - --security-opt
      - seccomp=unconfined
      - --cap-add
      - sys_ptrace
      - --ulimit=core=-1:-1
      - --ulimit=nofile=64960
      - --ulimit=nproc=140960:140960
      - --ulimit=memlock=-1:-1
      - --ulimit=stack=-1:-1
      - --shm-size={{user `shm_size`}}
      - --memory-swappiness=10
      - --tmpfs=/run
      - --tmpfs=/run/lock
      - -d
      - -it
      - --dns
      - '{{user `dns1`}}'
      - --add-host
      - 'netstore:{{user `netstore_ip`}}'
      - -e
      - container=docker
      - --
      - '{{.Image}}'
      - '/usr/sbin/init'
    volumes:
      "/netstore": "/netstore"
      "/bin/true": "/is_container:ro"
      "/sys/fs/cgroup": "/sys/fs/cgroup:ro"
    changes:
    - 'USER root'
    - 'WORKDIR /'
    - 'LABEL ssh_username={{user `ssh_username`}}'
    - 'LABEL build_name={{ build_name }}'
    - 'LABEL build_type={{ build_type }}'
    - 'LABEL build_date={{user `today`}}'
    - 'LABEL build_number={{user `build_number`}}'
    - 'LABEL installer_version={{user `installer_version`}}'
    - 'LABEL installer_build_number={{user `installer_build_number`}}'
    - 'LABEL installer_build_type={{user `installer_build_type`}}'
    - 'LABEL installer_xce_branch={{user `installer_xce_branch`}}'
    - 'LABEL installer_xce_sha1={{user `installer_xce_sha1`}}'
    - 'LABEL installer_xd_branch={{user `installer_xd_branch`}}'
    - 'LABEL installer_xd_sha1={{user `installer_xd_sha1`}}'
    - 'LABEL installer_byjob={{user `installer_byjob`}}'
    - 'LABEL installer_rc={{user `installer_rc`}}'
    - 'LABEL installer_tag={{user `installer_tag`}}'
    - 'ENV container=docker'
    - 'ENTRYPOINT ["/docker-entrypoint.sh"]'
    - 'CMD ["/usr/sbin/init"]'
    - 'EXPOSE 443 10000 22'
    - 'ENV PATH=/opt/xcalar/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'
    - 'ENV XLRDIR=/opt/xcalar'
    - 'VOLUME ["/mnt/xcalar"]'
###############
# Provisioners
##############
provisioners:
  - type: file
    source: '{{ template_dir }}/../scripts/genDefaultAdmin.sh'
    destination: /tmp/genDefaultAdmin.sh
  - type: file
    source: '{{ template_dir }}/../scripts/fix-docker-systemd.sh'
    destination: '/usr/bin/fix-docker-systemd.sh'
  #### BASE ONLY #######
  - type: shell
    environment_vars:
      - OSID=el7
      - ACCEPT_EULA=y
      - container=docker
      - TMPDIR=/tmp/installer
    execute_command: '{{.Vars}} /usr/bin/sudo -H -E bash ''{{.Path}}'''
    only: [docker-base-el7]
    inline:
      - mkdir -m 1777 -p $TMPDIR
      - groupmod -g 991 $(awk -F ':' '/999/{print $1}' /etc/group) || true
      - groupmod -g 992 $(awk -F ':' '/998/{print $1}' /etc/group) || true
      - groupadd -r -g 999 docker
      - groupadd -r -g 998 sudo
      - useradd -m -s /bin/bash -G sudo,docker '{{user `ssh_username`}}'
      - rm -fv $(ls /etc/yum.repos.d/CentOS-*.repo | grep -vE '(CentOS-Base|kernel)')
      - ELV=$(rpm -qf /etc/system-release --qf '%{VERSION}')
      - ELV=${ELV:0:1}
      - if [ "$ELV" = 7 ] || [ "$ELV" = 8 ]; then yum install -y https://dl.fedoraproject.org/pub/epel/epel-release-latest-${ELV}.noarch.rpm; fi
      - if [ "$ELV" = 2 ]; then amazon-linux-extras install -y epel; fi
      - rm -fv /etc/yum.repos.d/epel-*.repo
      - bash '{{user `installer`}}' -x $TMPDIR/installer
      - yum update -y
      - yum install -y curl ca-certificates systemd-sysv initscripts pam openssh-server
      - yum localinstall -y $TMPDIR/installer/xcalar-install/unibuild/*.rpm $TMPDIR/installer/xcalar-install/${OSID}/*.rpm
      - yum remove -y xcalar xcalar-platform
      - curl -fsSL https://download.docker.com/linux/static/stable/x86_64/docker-{{user `docker_version`}}.tgz | tar zxvf - --strip-components=1 -C /usr/bin docker/docker
      - rm -rvf /etc/xcalar /var/opt/xcalar $TMPDIR/installer
      - rm -fv /etc/default/xcalar
      - yum clean all --enablerepo='*'
      - mkdir -p -m 0750 /etc/sudoers.d
      - echo '%sudo ALL=(ALL) NOPASSWD:ALL' >/etc/sudoers.d/99-sudo
      - chmod 0440 /etc/sudoers.d/99-sudo
      - bash -x /usr/bin/fix-docker-systemd.sh
      - rm -rf /var/cache/yum* /var/tmp/yum* $TMPDIR
      - exit 0
  #### XCALAR ONLY #######
  - type: shell
    environment_vars:
      - OSID=el7
      - ACCEPT_EULA=y
      - container=docker
      - TMPDIR=/tmp/installer
      - UHOME=/home/{{user `ssh_username`}}
    execute_command: '{{.Vars}} /usr/bin/sudo -H -E bash ''{{.Path}}'''
    only: [docker-xcalar-el7]
    inline:
      - mkdir -m 1777 -p $TMPDIR
      - chmod +x /tmp/genDefaultAdmin.sh
      - chown root:root /tmp/genDefaultAdmin.sh
      - systemctl mask tuned.service
      ## installer-start
      - /bin/bash '{{user `installer`}}' --nostart --startonboot
      ## installer-done
      - mkdir -m 0700 -p $UHOME/.ssh && echo "{{user `ssh_pubkey`}}" > $UHOME/.ssh/authorized_keys && chmod 0644 $UHOME/.ssh/auth* && cd - && chown -R '{{user `ssh_username`}}:{{user `ssh_username`}}' $UHOME
      - chown -R '{{user `ssh_username`}}:{{user `ssh_username`}}' $UHOME
      - mv /tmp/genDefaultAdmin.sh /opt/xcalar/scripts/
      - echo "{{user `license`}}" | base64 -d | gzip -dc > /etc/xcalar/XcalarLic.key
      - mkdir -p /var/opt/xcalar/config /mnt
      - chmod 0700 /var/opt/xcalar/config
      - /opt/xcalar/scripts/genDefaultAdmin.sh -e '{{user `admin_email`}}' --username '{{user `admin_user`}}' --password '{{user `admin_password`}}' > /var/opt/xcalar/config/defaultAdmin.json
      - chmod 0600 /var/opt/xcalar/config/defaultAdmin.json
      - cp -a /var/opt/xcalar /mnt/
      - chown -R xcalar:xcalar /var/opt/xcalar /etc/xcalar /mnt/xcalar
      - yum clean all --enablerepo='*'
      - rm -rf /var/tmp/yum* /var/cache/yum/* $TMPDIR
      - echo -e '[Service]\nEnvironmentFile=/etc/sysconfig/dcc\n' > /tmp/99-dcc.conf
      - touch /etc/sysconfig/dcc
      - for ii in /etc/systemd/system/xcalar-{usrnode,caddy}.d; do mkdir -p $ii; cp /tmp/99-dcc.conf $ii/; done
  - type: file
    only: [docker-xcalar-el7]
    source: '{{ template_dir }}/docker-entrypoint.sh'
    destination: /
  - type: file
    only: [docker-xcalar-el7]
    source: '{{ template_dir }}/template.cfg'
    destination: /etc/xcalar/template.cfg
  - type: file
    only: [docker-xcalar-el7]
    source: '{{ template_dir }}/docker-entrypoint.sh'
    destination: /docker-entrypoint.sh
  - type: file
    only: [docker-xcalar-el7]
    source: '{{ user `xlrdir`}}/conf/localhost.crt'
    destination: /mnt/xcalar/config/
  - type: file
    only: [docker-xcalar-el7]
    source: '{{ user `xlrdir`}}/conf/localhost.key'
    destination: /mnt/xcalar/config/
  - type: shell
    execute_command: '{{.Vars}} /usr/bin/sudo -H -E bash ''{{.Path}}'''
    only: [docker-xcalar-el7]
    inline:
      - sed --follow-symlinks -r -i.bak 's@tls .*$@tls /mnt/xcalar/config/localhost.crt /mnt/xcalar/config/localhost.key@' /etc/xcalar/Caddyfile
      - chown 'root:xcalar' /mnt/xcalar/config/localhost.*
      - chmod 0640 /mnt/xcalar/config/localhost.key
      - chmod 0644 /mnt/xcalar/config/localhost.crt
      - chmod 0700 /mnt/xcalar/config
      - chown root:root /docker-entrypoint.sh

###############
# Post Processors
##############
post-processors:
  - - type: docker-tag
      repository: '{{user `registry`}}/{{user `repository`}}'
      tag: '{{user `installer_tag`}}'
      keep_input_artifact: true
    - docker-push
  - type: manifest
    output: docker-manifest.json
    custom_data:
    - build_number: '{{user `build_number`}}'
      installer_version: '{{user `installer_version`}}'
      installer_rc: '{{user `installer_rc`}}'
      installer_build_number: '{{user `installer_build_number`}}'
      installer_url: '{{user `installer_url`}}'
      installer_tag: '{{user `installer_tag`}}'
      installer: '{{user `installer`}}'
      bootstrap: '{{user `bootstrap`}}'
      project: '{{user `project`}}'
      today: '{{user `today`}}'
      uid: '{{user `uid`}}'
      ssh_username: '{{user `ssh_username`}}'
      ssh_pubkey: '{{user `ssh_pubkey`}}'
      release: '{{user `release`}}'
      shm_size: '{{user `shm_size`}}'
      registry: '{{user `registry`}}'
      repository: '{{user `repository`}}'
#  - type: shell-local
#    execute_command: '{{.Vars}} /usr/bin/sudo -H -E bash ''{{.Path}}'''
#    inline:
#      - mkdir -m 1777

#  - - type: docker-save
#      path: "packer_{{build_name}}-{{user `installer_tag`}}.tar"
#    - type: compress
#      compression_level: 7
#      output: "packer_{{build_name}}-{{user `installer_tag`}}.tar.gz"

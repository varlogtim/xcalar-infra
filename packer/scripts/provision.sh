#!/bin/bash
# DO NOT EDIT! THIS FILE IS AUTOGENERATED BY bin/docker2bash.sh!
# Make your changes to $XLRDIR/Dockerfile and run build config to
# generate this file and submit it with your Dockerfile changes

DOCKERPWD=$PWD
DOCKERUSER="`id -un`"
SRCDIR=$PWD
if [ `id -u` -ne 0 ]; then sudo "$0" "$@"; exit $?; fi
if [ -z "$APT_PROXY" ]; then echo >&2 "WARNING: \$APT_PROXY not specified in the environment!"; fi
if [ -z "$CONTAINER_USER" ]; then echo >&2 "WARNING: \$CONTAINER_USER not specified in the environment!"; export CONTAINER_USER=ubuntu; fi
if [ -z "$CONTAINER_UID" ]; then echo >&2 "WARNING: \$CONTAINER_UID not specified in the environment!"; export CONTAINER_UID=1000; fi
rm -f /etc/profile.d/buildenv.sh
set -ex
# FROM ubuntu:trusty
# MAINTAINER Xcalar <info@xcalar.com>

# ARG APT_PROXY
echo export JAVA_HOME=/usr/lib/jvm/java-7-openjdk-amd64 | tee -a /etc/profile.d/buildenv.sh && source /etc/profile.d/buildenv.sh

cd $DOCKERPWD && DEBIAN_FRONTEND=noninteractive http_proxy=$APT_PROXY apt-get update -y && DEBIAN_FRONTEND=noninteractive http_proxy=$APT_PROXY apt-get upgrade -y && DEBIAN_FRONTEND=noninteractive http_proxy=$APT_PROXY apt-get install -y gcc sg3-utils openssh-server git pmccabe fio libaio1 libaio1-dbg libaio-dev sysstat iotop nmap traceroute valgrind strace libtool m4 wget clang ant openjdk-7-jdk zip unzip doxygen libc6-dbg iperf g++ htop exuberant-ctags zlib1g-dev libeditline-dev libbsd-dev autoconf automake libncurses5-dev devscripts ispell ccache libboost1.55-all-dev libssl-dev libglib2.0-dev libpython2.7-dev libjansson4 libjansson-dev make linux-tools-common linux-tools-generic phantomjs apache2 jq nfs-common mysql-client mysql-server libmysqlclient-dev libevent-dev libboost-test1.55-dev dictionaries-common uuid-dev pxz xz-utils realpath wamerican lcov python-pip dpkg-dev libcap-dev || exit $?
## libhdfs3 deps
cd $DOCKERPWD && DEBIAN_FRONTEND=noninteractive http_proxy=$APT_PROXY apt-get install -y cmake libxml2 libxml2-dev libkrb5-dev krb5-user libgsasl7-dev uuid-dev libprotobuf-dev protobuf-compiler debhelper || exit $?
## fpm deps
cd $DOCKERPWD && DEBIAN_FRONTEND=noninteractive http_proxy=$APT_PROXY apt-get install -y librpm3 librpmbuild3 rpm flex bison gdb python2.7-dbg ruby ruby-dev ruby-bundler libruby unixodbc-bin libmyodbc unixodbc-dev curl vim-nox bash-completion bc || exit $?
cd $DOCKERPWD && DEBIAN_FRONTEND=noninteractive http_proxy=$APT_PROXY apt-get install -y --no-install-recommends maven2 libarchive-dev python-lxml libxslt1-dev libxslt1.1 libsnappy1 libsnappy-dev libjemalloc-dev || exit $?

cd $DOCKERPWD && groupadd --non-unique --force --gid 999 docker || exit $?
cd $DOCKERPWD && curl -sL https://deb.nodesource.com/setup_5.x | /bin/bash - && sed -i 's/https/http/g' /etc/apt/sources.list.d/* && DEBIAN_FRONTEND=noninteractive apt-get install -y nodejs || exit $?
cd $DOCKERPWD && for pkg in less grunt-cli uglify-js; do npm install -g $pkg; done || exit $?

cd $DOCKERPWD && curl -sL http://repo.xcalar.net/pubkey.gpg | sudo apt-key add - || exit $?
cd $DOCKERPWD && curl -sL http://repo.xcalar.net/xcalar-release-trusty.deb > /tmp/xcalar-release-trusty.deb && dpkg -i /tmp/xcalar-release-trusty.deb && rm -f /tmp/xcalar-release-trusty.deb || exit $?
cd $DOCKERPWD && apt-get update -y && DEBIAN_FRONTEND=noninteractive apt-get install -y thrift-dev pmd libhdfs3-dev libjemalloc-dev libjemalloc1 || exit $?


cd $DOCKERPWD && printf 'source %s\n\ngem %s' "'https://rubygems.org'" "'fpm'" > /tmp/Gemfile && cd /tmp && bundle install && rm /tmp/Gemfile || exit $?
DOCKERPWD="/usr/src"

## Remove .so's of libs that we depend on but don't ship with the distro.
## Since we don't dynamically link against these anymore, we don't need to worry about shipping their packages.
cd $DOCKERPWD && echo 'add-auto-load-safe-path /' | tee -a /etc/gdb/gdbinit || exit $?
#
cd $DOCKERPWD && echo '%sudo ALL=(ALL) NOPASSWD:ALL' > /etc/sudoers.d/99-sudo && chmod 0440 /etc/sudoers.d/99-sudo || exit $?



cd $DOCKERPWD && curl -o /usr/bin/gosu -fsSL "https://github.com/tianon/gosu/releases/download/1.7/gosu-$(dpkg --print-architecture)" && chmod +x /usr/bin/gosu || exit $?

cd $DOCKERPWD && for pkg in fake-factory ipdb pytest pytest-ordering enum34 apache_log_parser datetime pytz xlrd psutil netifaces pyquery texttable virtualenv; do pip install -U ${pkg}; done || exit $?

cd $SRCDIR && cp ./bin/install_unixOdbc.sh /usr/local/bin/ || curl -sSL http://repo.xcalar.net/scripts/install_unixOdbc.sh > /usr/local/bin/install_unixOdbc.sh && cd - || true
cd $SRCDIR && cp ./bin/setupOdbcMysql.sh /usr/local/bin/ || curl -sSL http://repo.xcalar.net/scripts/setupOdbcMysql.sh > /usr/local/bin/setupOdbcMysql.sh && cd - || true
cd $SRCDIR && cp ./bin/osid /usr/local/bin/ || curl -sSL http://repo.xcalar.net/scripts/osid > /usr/local/bin/osid && chmod +x /usr/local/bin/osid && cd - || true
cd $SRCDIR && cp ./bin/install-clang.sh /usr/local/bin/ || curl -sSL http://repo.xcalar.net/scripts/install-clang.sh > /usr/local/bin/install-clang.sh && cd - || true
cd $DOCKERPWD && bash /usr/local/bin/install-clang.sh || exit $?

cd $DOCKERPWD && service mysql restart && bash /usr/local/bin/install_unixOdbc.sh && bash /usr/local/bin/setupOdbcMysql.sh && service mysql stop || exit $?

cd $SRCDIR && cp -a ./conf/xcalar-sysctl.conf /etc/sysctl.d/99-xcalar.conf || curl -sSL http://repo.xcalar.net/patches/conf/xcalar-sysctl.conf > /etc/sysctl.d/90-sysctl.conf && cd - || true
cd $SRCDIR && cp -a ./conf/xcalar-limits.conf /etc/security/limits.d/99-xcalar.conf || curl -sSL http://repo.xcalar.net/patches/conf/xcalar-limits.conf > /etc/security/limits.d/90-limits.conf && cd - || true
cd $SRCDIR && cp -a ./conf/xcalar-logrotate.conf /etc/logrotate.d/xcalar || curl -sSL http://repo.xcalar.net/patches/conf/xcalar-logrotate.conf > /etc/logrotate.d/xcalar && cd - || true
cd $SRCDIR && cp -a ./conf/xcalar-rsyslog.conf   /etc/rsyslog.d/42-xcalar.conf || curl -sSL http://repo.xcalar.net/patches/conf/xcalar-rsyslog.conf > /etc/rsyslog.d/42-xcalar.conf && cd - || true

cd $DOCKERPWD && if ! grep -q '^xlrlowpriv:' /etc/passwd; then useradd --system --shell /usr/sbin/nologin xlrlowpriv; fi || exit $?
cd $DOCKERPWD && if ! grep -q '^xlrlowprivnet:' /etc/passwd; then useradd --system --shell /usr/sbin/nologin xlrlowprivnet; fi || exit $?

cd /var/tmp && for data in flight gdelt-small indexJoin yelp; do curl --retry 5 -sSL http://repo.xcalar.net/data/${data}.tar.gz | tar zxf - || true; done || true

# ARG CONTAINER_USER
# ARG CONTAINER_UID

cd $DOCKERPWD && if [ -n "$CONTAINER_USER" ]; then usermod -aG sudo $CONTAINER_USER; fi || exit $?
cd $DOCKERPWD && if [ -n "$CONTAINER_USER" ]; then usermod -aG docker $CONTAINER_USER; fi || exit $?
cd $DOCKERPWD && if [ -n "$CONTAINER_USER" ]; then usermod -aG disk $CONTAINER_USER; fi || exit $?
cd $DOCKERPWD && mkdir -p /var/log/xcalar /var/opt/xcalar /opt/xcalar/jail_py/usr /var/opt/xcalarTest /var/tmp/xcalar /var/tmp/xcalarTest || exit $?
cd $DOCKERPWD && if [ -n "$CONTAINER_UID" ]; then chown $CONTAINER_UID /var/opt/xcalar* /opt/xcalar/jail_py /opt/xcalar/jail_py/usr /var/tmp/xcalar* /var/log/xcalar; fi || exit $?

# EXPOSE 80 5000 18552

# CMD ["/bin/bash","-l"]
#Entrypoint CMD
#  "/bin/bash" "-l"

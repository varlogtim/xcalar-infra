#!/bin/bash
#
# shellcheck disable=SC2086,SC2207,SC2206,SC2034,SC2015

set -e

#==== just customize this part to another tool, saw aws cli
PROG="$(basename "$0")"

AZ_IMAGE_DEFAULT=${AZ_IMAGE_DEFAULT:-microsoft/azure-cli:latest}
AZ_USE_DOCKER=${AZ_USE_DOCKER:-false}
AZ_HOME=$HOME/.azure

AWS_IMAGE_DEFAULT=${AWS_IMAGE_DEFAULT:-registry.int.xcalar.com/awscliv2:latest}
AWS_USE_DOCKER=${AWS_USE_DOCKER:-false}
AWS_HOME=$HOME/.aws
#=====

PROGU=${PROG^^}
WRAP_IMAGE=${PROGU}_IMAGE
WRAP_IMAGE_DEFAULT=${PROGU}_IMAGE_DEFAULT
WRAP_USE_DOCKER="${PROGU}_USE_DOCKER"
WRAP_HOME=${PROGU}_HOME
PIMAGE="${!WRAP_IMAGE:-${!WRAP_IMAGE_DEFAULT}}"
PHOME="${!WRAP_HOME}"
if [ "${!WRAP_USE_DOCKER}" != true ] && ALLPROG=("$(which -a $PROG | grep -v "$(readlink -f "${BASH_SOURCE[0]}")")"); then
    exec "${ALLPROG[0]}" "$@"
fi
[ -d ${PHOME} ] || { mkdir -p ${PHOME} && chmod 0700 ${PHOME}; }
ARGS=(-v ${PHOME}:/root/$(basename ${PHOME}))
TLD="$(git rev-parse --show-toplevel 2>/dev/null || pwd)"
ARGS+=(-v $TLD:$TLD -w $PWD)
ENVS=()
ENVS+=(-e AWS_DEFAULT_REGION=${AWS_DEFAULT_REGION:-us-west2} -e AWS_SECRET_ACESS_KEY -e AWS_ACCESS_KEY_ID -e AWS_SESSION_TOKEN -e AWS_PROFILE)
ENVS+=(-e AZURE_CLIENT_ID -e AZURE_CLIENT_SECRET -e AZURE_STORAGE_ACCOUNT -e AZURE_STORAGE_KEY -e AZURE_SUBSCRIPTION_ID -e AZURE_TENANT_ID)
# The source could be in a different directory/repo
STLD="$(cd "$(dirname "${BASH_SOURCE[0]}")" && git rev-parse --show-toplevel || pwd)"
if [ "$STLD" != "$TLD" ]; then
    ARGS+=(-v $STLD:$STLD)
fi

touch ${PHOME}/img-check.ts
if [ ${PHOME}/img-check.ts -nt ${PHOME}/img-next.ts ]; then
    echo >&2 "Updating $PIMAGE ..."
    docker pull "$PIMAGE"
    touch --date='1 day' ${PHOME}/img-next.ts
fi

[ $# -gt 0 ] || set -- --help
exec docker run --rm "${ARGS[@]}" -- "$PIMAGE" $PROG "$@"

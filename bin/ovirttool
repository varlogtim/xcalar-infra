#!/bin/bash

set -e

SCRIPTDIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" >/dev/null && pwd )"
if [ -z "$XLRINFRADIR" ]; then
    export XLRINFRADIR="$(cd $SCRIPTDIR/.. && pwd)"
fi
cd $XLRINFRADIR

if ! docker image inspect ub14-build >/dev/null 2>&1; then
    echo >&2 "Hey you need to build ub14-build container before you can run this script! Read the setup section of the ovirttool wiki http://wiki.int.xcalar.com/mediawiki/index.php/Ovirttool#Setup, or I can try to do it for you"
    cd $XLRDIR/docker/ub14 && make && echo "Done! Run me again" || echo "Failed to run docker make :("
    exit 1
fi

if ! docker image inspect ovirttool >/dev/null 2>&1; then
    TMP="$(mktemp -d -t ovirtool.XXXXXX)"
    docker build -t ovirttool -f "$XLRINFRADIR/docker/ovirttool.df" "$TMP"
    rmdir "$TMP"
fi
cd $XLRINFRADIR

VM_COMMENT="${VM_COMMENT:-""}"

# OVIRT_PASSWORD and OVIRT_UNAME set in shell wrapper; allows tool to be non-interactive
# (--user in @$ takes precedence over OVIRT_UNAME if both supplied)
# VM_COMMENT allows an override of the default comment metadata that gets attached to
# VMs created by the ovirttool, so automated deployments of ovirttool can set their own
# (setting this comment is a way to keep track in ovirt gui, which VMs were created by ovirttool)
docker run -t -e OVIRT_PASSWORD -e OVIRT_UNAME -e VM_COMMENT -v /netstore:/netstore -v $XLRINFRADIR:$XLRINFRADIR -w $XLRINFRADIR -u `id -u`:`id -g` --rm ovirttool ovirt/ovirttool.py "$@"

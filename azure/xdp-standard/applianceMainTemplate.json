{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "licenseKey": {
      "type": "securestring",
      "defaultValue": ""
    },
    "scaleNumber": {
      "type": "int",
      "defaultValue": 1,
      "metadata": {
        "description": "Number of XCE nodes to provision. (Max: 16)"
      }
    },
    "adminUsername": {
      "type": "string",
      "metadata": {
        "description": "Administrator's username for the Xcalar cluster"
      }
    },
    "adminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "Administrator's password for the Xcalar cluster"
      }
    },
    "adminEmail": {
      "type": "string",
      "metadata": {
        "description": "Administrator's email address"
      }
    }
  },
  "variables": {
    "sq": "'",
    "clusterName": "xdp-standard-",
    "vmName": "[concat(variables('clusterName'), 'xce-vm')]",
    "vmSize": "Standard_D14_v2_Promo",
    "storageAccountType": "Standard_LRS",
    "storageAccountName": "[concat('xdpstorage', uniquestring(subscription().subscriptionId, resourceGroup().id, variables('clusterName')))]",
    "virtualNetworkName": "[concat(variables('clusterName'), 'vnet')]",
    "vnetAddressPrefix": "10.0.0.0/16",
    "publicIPAddressType": "Dynamic",
    "vnetID": "[resourceId('Microsoft.Network/virtualNetworks', variables('virtualNetworkName'))]",
    "subnet1Name": "[concat(variables('clusterName'),'subnet-1')]",
    "subnet1Prefix": "10.0.0.0/24",
    "subnet1Ref": "[concat(variables('vnetID'),'/subnets/', variables('subnet1Name'))]",
    "scriptsUri": "http://pub.xcalar.net/azure/dev",
    "customScriptName": "ampBootstrap-10.sh",
    "customScriptFilePath": "[concat(variables('scriptsUri'), '/', variables('customScriptName'))]",
    "customScriptCommandToExecute": "[concat('/bin/bash ', variables('customScriptName'), ' ')]",
    "imagePublisher": "OpenLogic",
    "imageOffer": "CentOS",
    "imageSKU": "7.3",
    "vmExtensionName": "xcalarBootstrapExtension"
  },
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "kind": "BlobStorage",
      "name": "[variables('storageAccountName')]",
      "apiVersion": "2017-06-01",
      "location": "[resourceGroup().location]",
      "identity": {
          "type": "SystemAssigned"
      },
      "sku": {
          "name": "[variables('storageAccountType')]"
      },
      "properties": {
          "accessTier": "hot"
      }
    },
    {
      "apiVersion": "2015-05-01-preview",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[concat(variables('clusterName'), 'publicIP', copyIndex())]",
      "location": "[resourceGroup().location]",
      "copy": {
        "name": "foo",
        "count": "[parameters('scaleNumber')]"
      },
      "properties": {
        "publicIPAllocationMethod": "[variables('publicIPAddressType')]"
      }
    },
    {
      "apiVersion": "2015-05-01-preview",
      "type": "Microsoft.Network/virtualNetworks",
      "name": "[variables('virtualNetworkName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('vnetAddressPrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[variables('subnet1Name')]",
            "properties": {
              "addressPrefix": "[variables('subnet1Prefix')]"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-05-01-preview",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[concat(variables('vmName'), copyIndex(), '-nic0')]",
      "location": "[resourceGroup().location]",
      "copy": {
        "name": "foo",
        "count": "[parameters('scaleNumber')]"
      },
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('clusterName'), 'publicIP', copyIndex())]",
        "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Static",
              "privateIPAddress": "[concat('10.0.0.', copyIndex(4))]",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses', concat(variables('clusterName'), 'publicIP', copyIndex()))]"
              },
              "subnet": {
                "id": "[variables('subnet1Ref')]"
              }
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2017-03-30",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[concat(variables('vmName'), copyIndex())]",
      "location": "[resourceGroup().location]",
      "copy": {
        "name": "vmiterator",
        "count": "[parameters('scaleNumber')]"
      },
      "dependsOn": [
        "[concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName'))]",
        "[concat('Microsoft.Network/networkInterfaces/', variables('vmName'), copyIndex(), '-nic0')]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[variables('vmSize')]"
        },
        "osProfile": {
          "computername": "[concat(variables('vmName'), copyIndex())]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('imagePublisher')]",
            "offer": "[variables('imageOffer')]",
            "sku": "[variables('imageSKU')]",
            "version": "latest"
          },
          "osDisk": {
            "createOption": "FromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', concat(variables('vmName'), copyIndex(), '-nic0'))]"
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(variables('vmName'), copyIndex(), '/', variables('vmExtensionName'))]",
      "apiVersion": "2017-03-30",
      "location": "[resourceGroup().location]",
      "copy": {
        "name": "foo",
        "count": "[parameters('scaleNumber')]"
      },
      "dependsOn": [
        "[concat('Microsoft.Compute/virtualMachines/', variables('vmName'), copyIndex())]",
        "[concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName'))]"
      ],
      "properties": {
        "publisher": "Microsoft.Azure.Extensions",
        "type": "CustomScript",
        "typeHandlerVersion": "2.0",
        "autoUpgradeMinorVersion": true,
        "settings": {
          "fileUris": [
            "[variables('customScriptFilePath')]"
          ]
        },
        "protectedSettings": {
          "commandToExecute": "[concat(variables('customScriptCommandToExecute'), variables('sq'), variables('vmName'), variables('sq'), ' ', variables('sq'), copyIndex(), variables('sq'), ' ', variables('sq'), parameters('scaleNumber'), variables('sq'), ' ', variables('sq'), parameters('licenseKey'), variables('sq'), ' ', variables('sq'), variables('sq'), ' ', variables('sq'), variables('sq'), ' ', variables('sq'), parameters('adminUsername'), variables('sq'), ' ', variables('sq'), parameters('adminPassword'), variables('sq'), ' ', variables('sq'), parameters('adminEmail'), variables('sq'), ' ', variables('sq'), variables('storageAccountName'), variables('sq'), ' ', variables('sq'), listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName')), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).keys[0].value, variables('sq'), ' >> /var/log/startup.log 2>&1')]"
        }
      }
    }
  ]
}

AWSTemplateFormatVersion: '2010-09-09'
Description: XCE AWS CloudFormation Template -  **WARNING** This template creates
  an Amazon EC2 instance. You will be billed for the AWS resources used if you create
  a stack from this template.
Parameters:
  VpcId:
    Type: AWS::EC2::VPC::Id
    Description: VpcId of your existing Virtual Private Cloud (VPC)
    ConstraintDescription: must be the VPC Id of an existing Virtual Private Cloud.
  Subnet:
    Type: AWS::EC2::Subnet::Id
    Description: The SubnetId in your Virtual Private Cloud (VPC)
    ConstraintDescription: must be a list of at least two existing subnets associated
      with at least two different availability zones. They should be residing in the
      selected Virtual Private Cloud.
  KeyName:
    Description: Name of an existing EC2 KeyPair to enable SSH access to the instance
    Type: AWS::EC2::KeyPair::KeyName
    ConstraintDescription: must be the name of an existing EC2 KeyPair.
    Default: xcalar-us-west-2
  InstallerUrl:
    Description: XCE Installer
    Type: String
    MinLength: '4'
    MaxLength: '256'
    AllowedPattern: http[s]?://[a-zA-Z][a-zA-Z0-9/\?%&\.=-]*
    ConstraintDescription: Must be a valid url.
    Default: http://repo.xcalar.net/builds/prod/xcalar-1.1.3-832-installer
  ImageId:
    Description: ID of an existing Amazon Machine Image (AMI)
    Type: AWS::EC2::Image::Id
    ConstraintDescription: Must be the name of an existing AMI.
    Default: ami-ade86cd5
  BootstrapUrl:
    Description: XCE Bootstrap Script
    Type: String
    MinLength: '8'
    MaxLength: '256'
    AllowedPattern: http[s]?://[a-zA-Z][a-zA-Z0-9/\?%&\.=-]*
    ConstraintDescription: Must be a valid url.
    Default: http://repo.xcalar.net/scripts/aws-asg-bootstrap-v6.sh
  InstanceType:
    Description: XCE EC2 instance type
    Type: String
    Default: r4.2xlarge
    AllowedValues:
      - r4.2xlarge
      - r4.4xlarge
      - r4.8xlarge
      - r4.16xlarge
      - i3.large
      - i3.xlarge
      - i3.2xlarge
      - i3.4xlarge
      - i3.8xlarge
      - i3.16xlarge
      - m5.xlarge
      - m5.2xlarge
      - m5.4xlarge
      - m5.12xlarge
      - m5.24xlarge
      - c5.2xlarge
      - c5.4xlarge
      - c5.9xlarge
      - c5.18xlarge
      - x1.16xlarge
      - x1.32xlarge
    ConstraintDescription: must be a valid EC2 instance type.
  SSHLocation:
    Description: ' The IP address range that can be used to SSH to the EC2 instances'
    Type: String
    MinLength: '9'
    MaxLength: '18'
    Default: 0.0.0.0/0
    AllowedPattern: (\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})
    ConstraintDescription: must be a valid IP CIDR range of the form x.x.x.x/x.
  InstanceCount:
    Description: Number of EC2 instances to launch
    Type: Number
    Default: '1'
  RootSize:
    Description: Size of root disk
    Type: Number
    Default: '50'
  SpotPrice:
    Description: SpotPrice of fleet
    Type: String
    AllowedPattern: (\d{1})\.(\d{1,4})
Resources:
  PlacementGroup:
    Type: AWS::EC2::PlacementGroup
    Properties:
      Strategy: cluster
  InstanceGroup:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      PlacementGroup: !Ref 'PlacementGroup'
      AvailabilityZones:
        - us-west-2c
      LaunchConfigurationName: !Ref 'LaunchConfig'
      MinSize: !Ref 'InstanceCount'
      MaxSize: !Ref 'InstanceCount'
      DesiredCapacity: !Ref 'InstanceCount'
    CreationPolicy:
      ResourceSignal:
        Timeout: PT15M
        Count: !Ref 'InstanceCount'
  LaunchConfig:
    Type: AWS::AutoScaling::LaunchConfiguration
    Properties:
      ImageId: !Ref 'ImageId'
      BlockDeviceMappings:
        - DeviceName: /dev/sda1
          Ebs:
            VolumeSize: !Ref 'RootSize'
            VolumeType: gp2
            DeleteOnTermination: true
        - DeviceName: /dev/sdb
          VirtualName: ephemeral0
        - DeviceName: /dev/sdc
          VirtualName: ephemeral1
        - DeviceName: /dev/sdd
          VirtualName: ephemeral2
        - DeviceName: /dev/sde
          VirtualName: ephemeral3
      IamInstanceProfile: xcalar-field-role
      InstanceType: !Ref 'InstanceType'
      SecurityGroups:
        - default
        - http-from-office
        - open-to-users-at-home
      KeyName: !Ref 'KeyName'
      EbsOptimized: true
      SpotPrice: !Ref 'SpotPrice'
      UserData:
        Fn::Base64: !Sub |
            #!/bin/bash -x
            set +e
            set -o pipefail
            yum install -y epel-release
            yum install -y jq nfs-utils curl
            RELEASE_RPM=$(rpm -qf /etc/redhat-release)
            RELEASE=$(rpm -q --qf %{VERSION} $RELEASE_RPM)
            ELVERSION="$(echo $RELEASE | sed -e 's/Server//g')"
            if ! test -e /opt/aws/bin/cfn-init; then
              yum install -y awscli
              rpm -q aws-cfn-bootstrap || yum localinstall -y http://repo.xcalar.net/deps/aws-cfn-bootstrap-1.4-18.el$ELVERSION.noarch.rpm
            fi
            export PATH="$PATH:/opt/aws/bin"
            # Install the files and packages from the metadata
            /opt/aws/bin/cfn-init -v --stack ${AWS::StackName} --resource InstanceGroup --region ${AWS::Region}
            curl -fL "${BootstrapUrl}" -o /usr/local/bin/aws-asg-bootstrap.sh && \
            chmod +x /usr/local/bin/aws-asg-bootstrap.sh && \
            /bin/bash -x /usr/local/bin/aws-asg-bootstrap.sh ${InstanceCount} "${InstallerUrl}" 2>&1 | tee /var/log/aws-asg-bootstrap.log
            rc=$?
            # Signal the status from cfn-init
            /opt/aws/bin/cfn-signal -e $rc --stack ${AWS::StackName} --resource InstanceGroup --region ${AWS::Region}
            exit $rc
